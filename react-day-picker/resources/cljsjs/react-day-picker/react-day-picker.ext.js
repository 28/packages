/**********************************************************************
 * Extern for DayPicker
 * Generated by http://jmmk.github.io/javascript-externs-generator
 **********************************************************************/
var DayPicker = {
  "DateUtils": {
    "addDayToRange": function () {},
    "addMonths": function () {},
    "clone": function () {},
    "default": {
      "addDayToRange": function () {},
      "addMonths": function () {},
      "clone": function () {},
      "getWeekNumber": function () {},
      "isDate": function () {},
      "isDayAfter": function () {},
      "isDayBefore": function () {},
      "isDayBetween": function () {},
      "isDayInRange": function () {},
      "isFutureDay": function () {},
      "isPastDay": function () {},
      "isSameDay": function () {},
      "isSameMonth": function () {}
    },
    "getWeekNumber": function () {},
    "isDate": function () {},
    "isDayAfter": function () {},
    "isDayBefore": function () {},
    "isDayBetween": function () {},
    "isDayInRange": function () {},
    "isFutureDay": function () {},
    "isPastDay": function () {},
    "isSameDay": function () {},
    "isSameMonth": function () {}
  },
  "Input": {
    "defaultProps": {
      "classNames": {
        "container": {},
        "overlay": {},
        "overlayWrapper": {}
      },
      "clickUnselectsDay": {},
      "component": {},
      "dayPickerProps": {},
      "format": {},
      "formatDate": function () {},
      "hideOnDayClick": {},
      "inputProps": {},
      "keepFocus": {},
      "overlayComponent": {
        "propTypes": {}
      },
      "parseDate": function () {},
      "placeholder": {},
      "showOverlay": {},
      "value": {}
    },
    "propTypes": {}
  },
  "LocaleUtils": {
    "default": {
      "formatDay": function () {},
      "formatMonthTitle": function () {},
      "formatWeekdayLong": function () {},
      "formatWeekdayShort": function () {},
      "getFirstDayOfWeek": function () {},
      "getMonths": function () {}
    },
    "formatDay": function () {},
    "formatMonthTitle": function () {},
    "formatWeekdayLong": function () {},
    "formatWeekdayShort": function () {},
    "getFirstDayOfWeek": function () {},
    "getMonths": function () {}
  },
  "ModifiersUtils": {
    "dayMatchesModifier": function () {},
    "default": {
      "dayMatchesModifier": function () {},
      "getModifiersForDay": function () {}
    },
    "getModifiersForDay": function () {}
  },
  "VERSION": {},
  "defaultProps": {
    "canChangeMonth": {},
    "captionElement": {
      "$$typeof": {},
      "_owner": {},
      "key": {},
      "props": {
        "classNames": {
          "body": {},
          "caption": {},
          "container": {},
          "day": {},
          "disabled": {},
          "footer": {},
          "interactionDisabled": {},
          "month": {},
          "months": {},
          "navBar": {},
          "navButtonInteractionDisabled": {},
          "navButtonNext": {},
          "navButtonPrev": {},
          "outside": {},
          "selected": {},
          "today": {},
          "todayButton": {},
          "week": {},
          "weekNumber": {},
          "weekday": {},
          "weekdays": {},
          "weekdaysRow": {},
          "wrapper": {}
        },
        "localeUtils": {
          "formatDay": function () {},
          "formatMonthTitle": function () {},
          "formatWeekdayLong": function () {},
          "formatWeekdayShort": function () {},
          "getFirstDayOfWeek": function () {},
          "getMonths": function () {}
        }
      },
      "ref": {},
      "type": {
        "defaultProps": {
          "localeUtils": {
            "formatDay": function () {},
            "formatMonthTitle": function () {},
            "formatWeekdayLong": function () {},
            "formatWeekdayShort": function () {},
            "getFirstDayOfWeek": function () {},
            "getMonths": function () {}
          }
        },
        "propTypes": {}
      }
    },
    "classNames": {
      "body": {},
      "caption": {},
      "container": {},
      "day": {},
      "disabled": {},
      "footer": {},
      "interactionDisabled": {},
      "month": {},
      "months": {},
      "navBar": {},
      "navButtonInteractionDisabled": {},
      "navButtonNext": {},
      "navButtonPrev": {},
      "outside": {},
      "selected": {},
      "today": {},
      "todayButton": {},
      "week": {},
      "weekNumber": {},
      "weekday": {},
      "weekdays": {},
      "weekdaysRow": {},
      "wrapper": {}
    },
    "enableOutsideDaysClick": {},
    "fixedWeeks": {},
    "initialMonth": {},
    "labels": {
      "nextMonth": {},
      "previousMonth": {}
    },
    "locale": {},
    "localeUtils": {
      "default": {
        "formatDay": function () {},
        "formatMonthTitle": function () {},
        "formatWeekdayLong": function () {},
        "formatWeekdayShort": function () {},
        "getFirstDayOfWeek": function () {},
        "getMonths": function () {}
      },
      "formatDay": function () {},
      "formatMonthTitle": function () {},
      "formatWeekdayLong": function () {},
      "formatWeekdayShort": function () {},
      "getFirstDayOfWeek": function () {},
      "getMonths": function () {}
    },
    "navbarElement": {
      "$$typeof": {},
      "_owner": {},
      "key": {},
      "props": {
        "classNames": {
          "body": {},
          "caption": {},
          "container": {},
          "day": {},
          "disabled": {},
          "footer": {},
          "interactionDisabled": {},
          "month": {},
          "months": {},
          "navBar": {},
          "navButtonInteractionDisabled": {},
          "navButtonNext": {},
          "navButtonPrev": {},
          "outside": {},
          "selected": {},
          "today": {},
          "todayButton": {},
          "week": {},
          "weekNumber": {},
          "weekday": {},
          "weekdays": {},
          "weekdaysRow": {},
          "wrapper": {}
        },
        "dir": {},
        "labels": {
          "nextMonth": {},
          "previousMonth": {}
        },
        "showNextButton": {},
        "showPreviousButton": {}
      },
      "ref": {},
      "type": {
        "defaultProps": {
          "classNames": {
            "body": {},
            "caption": {},
            "container": {},
            "day": {},
            "disabled": {},
            "footer": {},
            "interactionDisabled": {},
            "month": {},
            "months": {},
            "navBar": {},
            "navButtonInteractionDisabled": {},
            "navButtonNext": {},
            "navButtonPrev": {},
            "outside": {},
            "selected": {},
            "today": {},
            "todayButton": {},
            "week": {},
            "weekNumber": {},
            "weekday": {},
            "weekdays": {},
            "weekdaysRow": {},
            "wrapper": {}
          },
          "dir": {},
          "labels": {
            "nextMonth": {},
            "previousMonth": {}
          },
          "showNextButton": {},
          "showPreviousButton": {}
        },
        "propTypes": {}
      }
    },
    "numberOfMonths": {},
    "pagedNavigation": {},
    "renderDay": function () {},
    "renderWeek": function () {},
    "reverseMonths": {},
    "showOutsideDays": {},
    "showWeekDays": {},
    "showWeekNumbers": {},
    "tabIndex": {},
    "weekdayElement": {
      "$$typeof": {},
      "_owner": {},
      "key": {},
      "props": {},
      "ref": {},
      "type": {
        "propTypes": {}
      }
    }
  },
  "propTypes": {}
};
DayPicker.prototype = {
  "forceUpdate": function () {},
  "isReactComponent": function () {},
  "setState": function () {}
};
DayPicker.Input.prototype = {
  "forceUpdate": function () {},
  "isReactComponent": function () {},
  "setState": function () {}
};
DayPicker.defaultProps.captionElement.type.prototype = {
  "forceUpdate": function () {},
  "isReactComponent": function () {},
  "setState": function () {}
};
DayPicker.defaultProps.navbarElement.type.prototype = {
  "forceUpdate": function () {},
  "isReactComponent": function () {},
  "setState": function () {}
};
DayPicker.defaultProps.weekdayElement.type.prototype = {
  "forceUpdate": function () {},
  "isReactComponent": function () {},
  "setState": function () {}
};
/**********************************************************************
 * End Generated Extern for DayPicker
/**********************************************************************/
